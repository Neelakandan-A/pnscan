# Makefile.in for pnscan
#
# @configure_input@


# Some 'make' variants does not include CPPFLAGS when compiling, some do
.c.o:
	$(CC) $(CPPFLAGS) $(CFLAGS) -c -o $@ $<

@SET_MAKE@

srcdir = @srcdir@
VPATH = @srcdir@

DESTDIR =

prefix = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@

bindir = @bindir@
mandir = @mandir@
man1dir = ${mandir}/man1

CC = @CC@
INSTALL=@INSTALL@
TAR = tar

PACKAGE=@PACKAGE_TARNAME@
VERSION=@PACKAGE_VERSION@

CPPFLAGS = @CPPFLAGS@ -I. -I${srcdir}
CFLAGS = @CFLAGS@ -pthread -Wall
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@

VALGRIND=valgrind
VALGRINDFLAGS=--leak-check=full --track-origins=yes --error-exitcode=1 # --show-leak-kinds=all 

BINS=pnscan
OBJS=pnscan.o bm.o

all: $(BINS) Makefile

Makefile: Makefile.in config.status
	./config.status

config.h: config.h.in config.status
	./config.status

pnscan.o: 	pnscan.c bm.h
bm.o:		bm.c bm.h

pnscan: $(OBJS)
	$(CC) $(LDFLAGS) -o pnscan $(OBJS) $(LIBS)

# Clean targets
maintainer-clean:	distclean
	rm -f configure config.h.in

distclean:		clean
	rm -fr config.status config.log stamp-h1 .deps autom4te.cache Makefile config.h *.tar.gz

clean mostlyclean:
	-rm -f *~ \#* *.o $(BINS) core *.core vgcore.*


# Git targets
push: 	distclean
	git add -A && git commit -a && git push

pull:
	git pull


# Install targets
install-all install:  install-bin install-man

install-bin: $(BINS)
	$(INSTALL) -d $(DESTDIR)$(bindir)
	$(INSTALL) -c $(BINS) $(DESTDIR)$(bindir)

install-man:  pnscan.1
	$(INSTALL) -d "$(DESTDIR)$(man1dir)"
	$(INSTALL) -c pnscan.1 "$(DESTDIR)$(man1dir)" && \
	  gzip -f "$(DESTDIR)$(man1dir)/pnscan.1"


uninstall-all uninstall: uninstall-bin uninstall-man

uninstall-bin:
	rm -f "$(DESTDIR)$(bindir)/pnscan"

uninstall-man:
	rm -f "$(DESTDIR)$(man1dir)/pnscan.1.gz" "$(DESTDIR)$(man1dir)/pnscan.1"


# Check targets
check:
	@echo "Nothing to check for now."


DISTCHECKDIR=/tmp/distcheck-pnscan-$(VERSION)

distcheck: pnscan-$(VERSION).tar.gz
	@if test -d "$(DISTCHECKDIR)"; then \
	  chmod -R +w "$(DISTCHECKDIR)" && rm -fr "$(DISTCHECKDIR)"; \
	fi;
	mkdir -p "$(DISTCHECKDIR)" && \
	  gunzip <"pnscan-$(VERSION).tar.gz" | \
	    (cd "$(DISTCHECKDIR)" && $(TAR) xf - && \
	     chmod -R -w "pnscan-$(VERSION)" && \
	     mkdir b && cd b && ../pnscan-$(VERSION)/configure && \
	     $(MAKE) && $(MAKE) -s check) && echo "*** distcheck: OK"
	@chmod -R +w "$(DISTCHECKDIR)" && rm -fr "$(DISTCHECKDIR)";


DISTDIR=/tmp/build-pnscan-$(VERSION)

dist:	pnscan-$(VERSION).tar.gz

pnscan-$(VERSION).tar.gz: Makefile
	rm -fr "$(DISTDIR)" && mkdir -p "$(DISTDIR)/pnscan-$(VERSION)" && \
	  cp -r * "$(DISTDIR)/pnscan-$(VERSION)" && \
	  (cd "$(DISTDIR)/pnscan-$(VERSION)" && $(MAKE) distclean)
	(cd "$(DISTDIR)" && $(TAR) cvf - "pnscan-$(VERSION)") | gzip >"pnscan-$(VERSION)".tar.gz
	echo rm -fr "$(DISTDIR)"
	@echo ""
	@echo "*** pnscan-$(VERSION).tar.gz created"

