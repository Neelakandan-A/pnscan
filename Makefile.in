# Makefile.in for pnscan
#
# @configure_input@


# Some 'make' variants does not include CPPFLAGS when compiling, some do
.c.o:
	$(CC) $(CPPFLAGS) $(CFLAGS) -c -o $@ $<

DESTDIR =
srcdir =	@srcdir@
VPATH =		@srcdir@

prefix =	@prefix@
exec_prefix =	@exec_prefix@
datarootdir =	@datarootdir@

bindir =	@bindir@
mandir =	@mandir@
man1dir =	${mandir}/man1

CC = 		@CC@
INSTALL =	@INSTALL@
TAR =		tar

PACKAGE = 	@PACKAGE_TARNAME@
VERSION =	@PACKAGE_VERSION@

CPPFLAGS = 	@CPPFLAGS@ -I. -I${srcdir}
CFLAGS = 	-pthread -Wall @CFLAGS@
LDFLAGS = 	@LDFLAGS@
LIBS = 		@LIBS@

@SET_MAKE@

VALGRIND = 	valgrind
VALGRINDFLAGS =	--leak-check=full --track-origins=yes --error-exitcode=1 # --show-leak-kinds=all 

DISTCHECKDIR =	/tmp/distcheck-$(PACKAGE)-$(VERSION)
DISTDIR =	/tmp/build-$(PACKAGE)-$(VERSION)

BINS =		pnscan
OBJS =		pnscan.o bm.o


all: $(BINS) Makefile


Makefile: Makefile.in config.status
	./config.status

config.h: config.h.in config.status
	./config.status


pnscan: $(OBJS)
	$(CC) $(LDFLAGS) -o pnscan $(OBJS) $(LIBS)

pnscan.o: 	pnscan.c bm.h
bm.o:		bm.c bm.h



# Clean targets
maintainer-clean: distclean
	rm -f configure config.h.in

distclean: clean
	rm -fr config.status config.log stamp-h1 .deps autom4te.cache Makefile config.h *.tar.gz
	(cd pkgs && $(MAKE) distclean)

clean mostlyclean:
	-rm -f *~ \#* *.o $(BINS) core *.core vgcore.*


# Git targets
push: distclean
	git add -A && git commit -a && git push

pull:
	git pull


# Install targets
install install-all: install-bin install-man

install-strip: install-bin-strip install-man

install-bin: $(BINS)
	$(INSTALL) -d "$(DESTDIR)$(bindir)"
	$(INSTALL) $(BINS) "$(DESTDIR)$(bindir)"

install-bin-strip: $(BINS)
	$(INSTALL) -d "$(DESTDIR)$(bindir)"
	$(INSTALL) -s $(BINS) "$(DESTDIR)$(bindir)"

install-man:  pnscan.1
	-$(INSTALL) -d "$(DESTDIR)$(man1dir)"
	-$(INSTALL) pnscan.1 "$(DESTDIR)$(man1dir)" && \
	  gzip -f "$(DESTDIR)$(man1dir)/pnscan.1"


uninstall-all uninstall: uninstall-bin uninstall-man

uninstall-bin:
	rm -f "$(DESTDIR)$(bindir)/pnscan"

uninstall-man:
	test -d "$(TESTDIR)$(man1dir)" && rm -f "$(DESTDIR)$(man1dir)"/pnscan.1 "$(DESTDIR)$(man1dir)"/pnscan.1.gz


# Check targets
check:	pnscan
	./pnscan -v 127.0.0.1 22

distcheck: $(PACKAGE)-$(VERSION).tar.gz
	@if test -d "$(DISTCHECKDIR)"; then \
	  chmod -R +w "$(DISTCHECKDIR)" && rm -fr "$(DISTCHECKDIR)"; \
	fi;
	mkdir -p "$(DISTCHECKDIR)" && \
	  gunzip <"$(PACKAGE)-$(VERSION).tar.gz" | \
	    (cd "$(DISTCHECKDIR)" && $(TAR) xf - && \
	     chmod -R -w "$(PACKAGE)-$(VERSION)" && \
	     mkdir b && cd b && ../$(PACKAGE)-$(VERSION)/configure && \
	     $(MAKE) && $(MAKE) -s check) && echo "*** distcheck: OK"
	@chmod -R +w "$(DISTCHECKDIR)" && rm -fr "$(DISTCHECKDIR)";


# Dist targets

dist:	$(PACKAGE)-$(VERSION).tar.gz

$(PACKAGE)-$(VERSION).tar.gz: Makefile
	rm -fr "$(DISTDIR)" && mkdir -p "$(DISTDIR)/$(PACKAGE)-$(VERSION)" && \
	  cp -r * "$(DISTDIR)/$(PACKAGE)-$(VERSION)" && \
	  (cd "$(DISTDIR)/$(PACKAGE)-$(VERSION)" && $(MAKE) distclean)
	(cd "$(DISTDIR)" && $(TAR) cvf - "$(PACKAGE)-$(VERSION)") | gzip >"$(PACKAGE)-$(VERSION)".tar.gz
	echo rm -fr "$(DISTDIR)"
	@echo ""
	@echo "*** $(PACKAGE)-$(VERSION).tar.gz created"

